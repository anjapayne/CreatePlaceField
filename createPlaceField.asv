function [x_pos, y_pos, x_spike, y_spike, rate_map, time_map] = createPlaceField(mClust_spikeTimes, position)

%function [x_pos, y_pos, time_map, time, tSpikes] = createPlaceField(mClust_spikeTimes, position)
% Script to create place field based on firing rate of a given neuron
% Written August 4, 2017
% Last modified by Anja Payne

% Notes:
%   - Need to add minimum velocity
%   - Need to add minimum occupancy

% Load Data
position = load(position);
time     = round(position.time*1000);      %load and convert to msec
tSpikes  = load(mClust_spikeTimes); 
tSpikes  = tSpikes.tSpikes_Revised; 
tSpikes  = round(tSpikes/10); %divide to get units of msec

% Define Variables
x_pos_pixel = position.pos(1,:);
y_pos_pixel = position.pos(2,:); 
bins = 35;
sLength = 70; %length of box: 70cm
binWidth = sLength/bins;
smooth_by = 5; %smoothing factor that is used when calculating the rate map
mapAxis = (-sLength/2+binWidth/2):binWidth:(sLength/2-binWidth/2);
%mapAxis = min(x_pos):max(x_pos); 
suppressRedraw = 1;
x_pos = (max(x_pos_pixel)-min(x_pos_pixel))/bins; 
y_pos = (max(y_pos_pixel)-min(y_pos_pixel))/bins;

% Smooth the position files
for k = 8:length(x_pos)-7; 
    x_pos(k) = nanmean(x_pos(k-7:k+7));
    y_pos(k) = nanmean(y_pos(k-7:k+7)); 
end

% Center the position so it is the same for all maps
[x_pos,y_pos] = centerBox(x_pos, y_pos); 

% Determine how much time the animal spent in each bin (bin size is defined
% in the variables section above)
time_map = findTimeMap(x_pos, y_pos, time, bins, sLength, binWidth);

% Calculate the rate map
% Since the sampling rates are different between the position/video data
% and the ephys data, use discretize to find the nearest match for
% 'tSpikes' in 'time.' First, need to get rid of any NaN's in time. 
time_no_nan = time; 
time_no_nan(isnan(time_no_nan)) = []; 
tSpikes_binned = discretize(tSpikes, time_no_nan);
tSpikes_binned(isnan(tSpikes_binned)) = []; 
tSpikes_matched = NaN(1, length(tSpikes_binned));

for ll = 1:length(tSpikes_binned); 
    tSpikes_matched(ll) = time_no_nan(tSpikes_binned(ll));
end

x_spike = NaN(1, length(tSpikes_matched)); 
y_spike = NaN(1, length(tSpikes_matched)); 
for kk = 1:length(tSpikes_matched);
    index = find(time == tSpikes_matched(kk)); 
    x_spike(kk) = x_pos_pixel(index); 
    y_spike(kk) = y_pos_pixel(index);
end
x_spike = 

rate_map = calculateRateMap(tSpikes, x_spike, y_spike, x_pos, y_pos, time , smooth_by, mapAxis); %function is called 'ratemap' in Leutgeb code
peak_rate = max(max(rate_map))

% Plot maps
fieldAxis = linspace(-sLength/2,sLength/2,bins);

% Need to remove unvisited parts of the box from the map
drawField(rate_map, mapAxis, 'jet', peak_rate, peak_rate, 'testing', 'AP', 'on');
set(gcf,'Color', [1 1 1]);
drawnow;

% Plot path of rat with spikes
%set(0,'CurrentFigure',h2)
h = plot(x_pos, y_pos); % Path
set(h,'color',[0.4 0.4 0.4]); % Set color of the path to gray
title('path with spikes');
hold on;
plot(x_spike,y_spike,'.r'); % Spikes
set(gcf,'Color', [1 1 1]);
hold off;
axis image;
%axis([-sLength/2,sLength/2,-sLength/2,sLength/2]);
axis off;
drawnow;


%{
% Old Analysis to be modified
window = 50; 
numSpikes = zeros(1, max(tSpikes)); 
for i = 1+window:max(tSpikes-window); 
    
    count = sum(tSpikes > i & tSpikes < i+window); 
    rate = count/window; 
    numSpikes(i+window/2) = rate;
end



% To be added: apply mean filter to position coordinates
% To be added (maybe): find the amount of time the animal spends in each
% space bin
% To be added: Leutgeb lab doesn't plot 'stray' spikes, only spike trains
% so maybe we should incorporate that also?



tVideo = position.pos/59.94; %divide by the sampling rate to get units in seconds

x_pos = round(downsample(x_pos, 60));
x_pos_new = round(x_pos/20);
y_pos = round(downsample(y_pos, 60)); 
y_pos_new = round(y_pos/20);
 

max(x_pos_new)-min(x_pos_new);
max(y_pos_new)-min(y_pos_new);

map = zeros(max(x_pos_new)-min(x_pos_new)+1, max(y_pos_new)-min(y_pos_new)+1); 
length(numSpikes);
length(x_pos_new);
length(y_pos_new);
for j = 1:length(numSpikes);
    
    index_x = x_pos_new(j)-min(x_pos_new)+1;
    index_y = y_pos_new(j)-min(y_pos_new)+1;

    if isnan(x_pos_new(j)) == 1 || isnan(y_pos_new(j)) == 1;
        continue;
    end
    % If no spike rate has been assigned to the position then assign it
    if map(index_x, index_y) == 0; 
        map(index_x, index_y) = numSpikes(j);
 
    % Otherwise if a spike rate has already been assigned, then take the
    % average of the two and reassign it
    else
        map(index_x, index_y) = (map(index_x, index_y) + numSpikes(j))/2; 
    end
end

clf

figure(1);
hold on;
title('Rate Map', 'FontSize', 16); 
contourf(map);
colorbar;

figure(2)
hold on;
title('Spike Locations Overlaid on Animal Trajectory', 'FontSize', 16); 
plot(-x_pos, -y_pos', 'color', [0.57 0.57 0.57]);
scatter(-x_pos(tSpikes)', -y_pos(tSpikes)', '.r'); 
%}
%}
%}
end

